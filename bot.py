import os
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext
import logging
from database import init_db, add_transaction, get_balance, get_summary

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É—á—ë—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π:\n"
        "/–¥–æ—Ö–æ–¥ 1000 –µ–¥–∞\n"
        "/—Ä–∞—Å—Ö–æ–¥ 300 —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç\n"
        "/–±–∞–ª–∞–Ω—Å\n"
        "/—Å–≤–æ–¥–∫–∞"
    )

def handle_income(update: Update, context: CallbackContext):
    try:
        amount = float(context.args[0])
        category = context.args[1] if len(context.args) > 1 else "–î—Ä—É–≥–æ–µ"
        add_transaction(update.effective_user.id, "income", amount, category)
        update.message.reply_text(f"‚úÖ –î–æ—Ö–æ–¥ {amount} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}' –¥–æ–±–∞–≤–ª–µ–Ω!")
    except (IndexError, ValueError):
        update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: /–¥–æ—Ö–æ–¥ <—Å—É–º–º–∞> [–∫–∞—Ç–µ–≥–æ—Ä–∏—è]")

def handle_expense(update: Update, context: CallbackContext):
    try:
        amount = float(context.args[0])
        category = context.args[1] if len(context.args) > 1 else "–î—Ä—É–≥–æ–µ"
        add_transaction(update.effective_user.id, "expense", amount, category)
        update.message.reply_text(f"‚úÖ –†–∞—Å—Ö–æ–¥ {amount} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}' –¥–æ–±–∞–≤–ª–µ–Ω!")
    except (IndexError, ValueError):
        update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: /—Ä–∞—Å—Ö–æ–¥ <—Å—É–º–º–∞> [–∫–∞—Ç–µ–≥–æ—Ä–∏—è]")

def show_balance(update: Update, context: CallbackContext):
    balance = get_balance(update.effective_user.id)
    update.message.reply_text(f"üí∞ –ë–∞–ª–∞–Ω—Å: {balance:.2f}")

def show_summary(update: Update, context: CallbackContext):
    income, expense = get_summary(update.effective_user.id)
    balance = income - expense
    update.message.reply_text(
        f"üìä –°–≤–æ–¥–∫–∞:\n"
        f"–î–æ—Ö–æ–¥—ã: {income:.2f}\n"
        f"–†–∞—Å—Ö–æ–¥—ã: {expense:.2f}\n"
        f"–ë–∞–ª–∞–Ω—Å: {balance:.2f}"
    )

def main():
    init_db()
    
    # –°–Æ–î–ê –í–°–¢–ê–í–¨ –°–í–û–ô –¢–û–ö–ï–ù!
    TOKEN = "8384481730:AAH0q69zUDAFXZ-Ry0hgGtkL7LFA96XFs7Q"
    
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("–¥–æ—Ö–æ–¥", handle_income))
    dp.add_handler(CommandHandler("—Ä–∞—Å—Ö–æ–¥", handle_expense))
    dp.add_handler(CommandHandler("–±–∞–ª–∞–Ω—Å", show_balance))
    dp.add_handler(CommandHandler("—Å–≤–æ–¥–∫–∞", show_summary))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    updater.start_polling()
    updater.idle()
    
# –í —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ bot.py (–ø–µ—Ä–µ–¥ if __name__ == "__main__")

def main():
    init_db()
    TOKEN = os.environ.get("BOT_TOKEN")  # ‚Üê –±—É–¥–µ–º –±—Ä–∞—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã
    if not TOKEN:
        raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –∑–∞–¥–∞–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é BOT_TOKEN.")
    
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("–¥–æ—Ö–æ–¥", handle_income))
    dp.add_handler(CommandHandler("—Ä–∞—Å—Ö–æ–¥", handle_expense))
    dp.add_handler(CommandHandler("–±–∞–ª–∞–Ω—Å", show_balance))
    dp.add_handler(CommandHandler("—Å–≤–æ–¥–∫–∞", show_summary))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–±–ª–∞–∫–µ!")
    updater.start_polling()
    updater.idle()
if __name__ == "__main__":
    main()
